import React from 'react';
import jsPDF from 'jspdf';
import { Route } from '../types';

interface PDFExporterProps {
  route: Route | null;
  onExport: () => void;
}

const PDFExporter: React.FC<PDFExporterProps> = ({ route, onExport }) => {
  const generatePDF = async () => {
    if (!route) return;

    const pdf = new jsPDF('p', 'mm', 'a4');
    const pageWidth = pdf.internal.pageSize.getWidth();
    const pageHeight = pdf.internal.pageSize.getHeight();
    const margin = 20;

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
    pdf.setFontSize(20);
    pdf.setFont('helvetica', 'bold');
    pdf.text('–ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å –ø–æ –°–∞—Ä–∞—Ç–æ–≤—É', pageWidth / 2, 30, { align: 'center' });

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ
    pdf.setFontSize(16);
    pdf.setFont('helvetica', 'bold');
    pdf.text(route.name, margin, 50);

    pdf.setFontSize(12);
    pdf.setFont('helvetica', 'normal');
    pdf.text(`–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${route.distance.toFixed(1)} –∫–º`, margin, 60);
    pdf.text(`–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è: ${Math.round(route.duration)} –º–∏–Ω—É—Ç`, margin, 70);
    pdf.text(`–°–ª–æ–∂–Ω–æ—Å—Ç—å: ${route.difficulty === 'easy' ? '–õ–µ–≥–∫–∏–π' : 
                            route.difficulty === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π' : '–°–ª–æ–∂–Ω—ã–π'}`, margin, 80);

    let yPosition = 100;

    // –ú–µ—Å—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞
    pdf.setFontSize(14);
    pdf.setFont('helvetica', 'bold');
    pdf.text('–ú–µ—Å—Ç–∞ –¥–ª—è –ø–æ—Å–µ—â–µ–Ω–∏—è:', margin, yPosition);
    yPosition += 15;

    route.places.forEach((place, index) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã—Ö–æ–¥–∏–º –ª–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      if (yPosition > pageHeight - 60) {
        pdf.addPage();
        yPosition = 30;
      }

      // –ù–æ–º–µ—Ä –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞
      pdf.setFontSize(12);
      pdf.setFont('helvetica', 'bold');
      pdf.text(`${index + 1}. ${place.name}`, margin, yPosition);
      yPosition += 10;

      // –û–ø–∏—Å–∞–Ω–∏–µ
      pdf.setFont('helvetica', 'normal');
      const descriptionLines = pdf.splitTextToSize(place.description, pageWidth - 2 * margin);
      pdf.text(descriptionLines, margin + 5, yPosition);
      yPosition += descriptionLines.length * 5 + 5;

      // –†–µ–π—Ç–∏–Ω–≥
      const stars = '‚òÖ'.repeat(Math.floor(place.rating)) + '‚òÜ'.repeat(5 - Math.floor(place.rating));
      pdf.text(`–†–µ–π—Ç–∏–Ω–≥: ${stars} (${place.rating}/5)`, margin + 5, yPosition);
      yPosition += 8;

      // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      if (place.businessInfo) {
        if (place.businessInfo.phone) {
          pdf.text(`–¢–µ–ª–µ—Ñ–æ–Ω: ${place.businessInfo.phone}`, margin + 5, yPosition);
          yPosition += 6;
        }
        if (place.businessInfo.workingHours) {
          pdf.text(`–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: ${place.businessInfo.workingHours}`, margin + 5, yPosition);
          yPosition += 6;
        }
        if (place.businessInfo.website) {
          pdf.text(`–°–∞–π—Ç: ${place.businessInfo.website}`, margin + 5, yPosition);
          yPosition += 6;
        }
      }

      yPosition += 10;
    });

    // QR-–∫–æ–¥ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ (—Å–∏–º—É–ª—è—Ü–∏—è)
    if (yPosition > pageHeight - 80) {
      pdf.addPage();
      yPosition = 30;
    }

    pdf.setFontSize(14);
    pdf.setFont('helvetica', 'bold');
    pdf.text('QR-–∫–æ–¥ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏:', margin, yPosition);
    yPosition += 20;

    // –†–∏—Å—É–µ–º –ø—Ä–æ—Å—Ç–æ–π QR-–∫–æ–¥ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –±—ã –Ω–∞—Å—Ç–æ—è—â–∏–π QR-–∫–æ–¥)
    const qrSize = 40;
    pdf.rect(margin, yPosition, qrSize, qrSize);
    pdf.setFontSize(8);
    pdf.text('QR-–∫–æ–¥', margin + qrSize/2, yPosition + qrSize/2, { align: 'center' });

    pdf.setFontSize(10);
    pdf.text('–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ', margin + qrSize + 10, yPosition + qrSize/2);

    // –§—É—Ç–µ—Ä
    pdf.setFontSize(10);
    pdf.setFont('helvetica', 'italic');
    pdf.text(
      '–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è "–°–æ–±–µ—Ä–∏ —Å–≤–æ–π –°–∞—Ä–∞—Ç–æ–≤"',
      pageWidth / 2,
      pageHeight - 20,
      { align: 'center' }
    );

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º PDF
    pdf.save(`${route.name.replace(/[^a-zA-Z–∞-—è–ê-–Ø0-9]/g, '_')}.pdf`);
    onExport();
  };

  const shareRoute = () => {
    if (!route) return;

    const shareData = {
      title: route.name,
      text: `–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –º–æ–π –º–∞—Ä—à—Ä—É—Ç –ø–æ –°–∞—Ä–∞—Ç–æ–≤—É: ${route.places.length} –º–µ—Å—Ç, ${route.distance.toFixed(1)} –∫–º`,
      url: window.location.href + `?route=${route.id}`
    };

    if (navigator.share) {
      navigator.share(shareData);
    } else {
      // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–æ–≤ –±–µ–∑ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Web Share API
      const text = `${shareData.title}\n${shareData.text}\n${shareData.url}`;
      navigator.clipboard.writeText(text).then(() => {
        alert('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
      });
    }
  };

  if (!route) return null;

  return (
    <div className="export-buttons">
      <button className="export-btn export-pdf" onClick={generatePDF}>
        üìÑ –°–∫–∞—á–∞—Ç—å PDF
      </button>
      <button className="export-btn export-share" onClick={shareRoute}>
        üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
      </button>
    </div>
  );
};

export default PDFExporter;
